---
layout:     post
title:      "微信小程序爬坑"
date:       2018-05-26 23:25:00
author:     "Qz"
header-img: "img/post-bg-2015.jpg"
catalog: true
tags:
    - 微信小程序
---

> “Yeah It's on. ”



## 原生小程序相关



### app的onLaunch和页面onShow同时发出请求

写wepy框架的时候遇到个坑，要在app的onLaunch中发出一些请求，并把结果保存在本地，然而在页面中onShow也发出了这些请求，**也就造成了多余不必要的请求**

**最终解决：做了一个缓存队列，在一个请求发送的过程中，如果还有同样的一些请求发送，就将这些请求缓存在队列中，共享第一个请求的回调，不必要发送请求**

```javascript
// 具体做法
// global.singleton 为一个全局对象
// 一个请求对应多个resolve

function getAbTestByRequest(data = {}) {
  return new Promise(async (resolve, reject) => {
    // console.log('singleton start', '2');
    global.singleton = global.singleton || {};
    if (global.singleton[AB_TEST_KEY]) {
      global.singleton[AB_TEST_KEY].push(resolve);
    } else {
      global.singleton[AB_TEST_KEY] = [resolve];
	  //发起请求
      _getAbTestForPure(data).then((output) => {
        let func = {};
        // eslint-disable-next-line
        while (func = global.singleton[AB_TEST_KEY].shift()) {
          func(output.data.data);
          if (!hasAbTest()) {
            _saveAbTest(output.data.data);
          }
          // console.log('singleton end', output);
        }
      }, rej => {
        reject(rej);
      });
    }
  });
}

```


>app的onLaunch和页面onShow几乎是同时触发的

### Content-type问题

官网里面的示例代码中content-type是设置为'application/json'的，然而……！！！

但是原来是微信开发工具升级后，请求的header的Content-type写法变了，要改成:

**header: { content-type: 'json' }**

>tip: content-type 默认为 'application/json';


[网络请求之re.request 和那些坑](https://www.cnblogs.com/huangenai/p/6427911.html)



### header
header 为 application/json，接口传回来的参数要是json 格式的，否则会报500错误，接口返回来的参数是xml则header['content-type'] 要设置为'application/x-www-form-urlencoded'


### method 
**需大写**

有效值：OPTIONS, GET, HEAD, POST, PUT, DELETE, TRACE, CONNECT 	


### data 数据说明
* 对于 GET 方法的数据，会将数据转换成 query string（encodeURIComponent(k)=encodeURIComponent(v)&encodeURIComponent(k)=encodeURIComponent(v)...）
* 对于 POST 方法且 header['content-type'] 为 application/json 的数据，会对数据进行 JSON 序列化
* 对于 POST 方法且 header['content-type'] 为 application/x-www-form-urlencoded 的数据，会将数据转换成 query string （encodeURIComponent(k)=encodeURIComponent(v)&encodeURIComponent(k)=encodeURIComponent(v)...）


### scroll-view横向滚动

scroll-view横向无法滚动

要设置css样式 
```css
white-space: nowrap;
```



### 去除border边框
问题：
使用传统的用“border:none;来去除边框”，依旧有一条细细的border;

解决:
使用 button::after{ border: none; } 来去除边框





### canvas的drawImage
问题：真机canvas的drawImage无法加载加载网络图片

解决：canvas上绘制的目前只支持本地图片,网页上的图片如果是网络图片，在显示时都会暂存在本地，有的直接在缓存中。所以，我们使用getimageinfo去获取到我们的图片的信息先（主要是缓存在本地的时候，会保存下一个临时文件），接着再去使用这个方式去保存到本地的相册

```javascript
    //拿到可以在canvas绘制的图片url
    getImageInfo (url) {
      return new Promise((resolve, reject) => {
        /* 获得要在画布上绘制的图片 */
        const objExp = new RegExp(/^http(s)?:\/\/([\w-]+\.)+[\w-]+(\/[\w- .\/?%&=]*)?/)
        if (objExp.test(url)) {
          wx.getImageInfo({
            src: url,
            complete (res) {
              if (res.errMsg === 'getImageInfo:ok') {
                console.log('网络图片', res.path)
                resolve(res.path)
              } else {
                reject(new Error('getImageInfo fail'))
              }
            }
          })
        } else {
          console.log('本地图片', url)
          resolve(url)
        }
      })
    }
```



### e.target.dataset的问题
　在微信开发中我们经常会用到标签中属性的属性值，有时候我们通过 data-* 和 e.target.dateset 来获取属性值会出现一点小bug，即是调用出来的数据是undefined。
 
 ```
 <--HTML写法：-->
<button binTap="buy" data-textId="101"></button>
```

很多人可能会像我我一样卡在这里了，怎么找都找不到原因，怎么更改都是undefined。 
　
 那就是data后面的属性名写得不规范！**在data后面的属性名是不能按照驼峰式的写法，只要把定义的属性名全部换成小写就没有问题了！**




## mpvue相关

[http://mpvue.com/mpvue/](http://mpvue.com/mpvue/)

### 不支持函数
不支持在 template 内使用 methods 中的函数。

解决方法:写在computed里



### 滑动组件相关
[http://kuangpf.com/mpvue-weui/#/slider](http://kuangpf.com/mpvue-weui/#/slider)

bindchange和bindchanging 在mpvue框架中的写法为: @change和@changing

类型为事件的属性在完成触发事件后，取值的方式为：event.mp.detail = {value: value}


