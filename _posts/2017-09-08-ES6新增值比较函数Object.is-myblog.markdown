---
layout:     post
title:      "ES6新增值比较函数Object.is"
date:       2017-09-08 22:33:00
author:     "Qz"
header-img: "img/post-bg-2015.jpg"
catalog: true
tags:
    - ES6
---

> “Yeah It's on. ”


## 正文
[网页链接](http://www.cnblogs.com/snandy/p/4485229.html)

在这之前我们比较值使用两等号 == 或 三等号===， 三等号更加严格，只要比较两方类型不同立即返回false。

<strong>另外，有且只有一个值不和自己相等，它是NaN </strong> 

NaN == NaN   //false

现在ES6又加了一个Object.is，让比较运算的江湖更加混乱。多数情况下Object.is等价于“===”，如下



```
1 === 1 // true
Object.is(1, 1) // true
 
'a' === 'a' // true
Object.is('a', 'a') // true
 
true === true // true
Object.is(true, true) // true
 
null === null // true
Object.is(null, null) // true
 
undefined === undefined // true
Object.is(undefined, undefined) // true
```

但对于NaN、0、+0、 -0，则和 “===” 不同
```
NaN === NaN // false
Object.is(NaN, NaN) // true
 
0 === -0 // true
Object.is(0, -0) // false
 
-0 === +0 // true
Object.is(-0, +0) // false
```


## 其他
在js中我们一般认为正负0是不相等的，但是 -0 == +0 会返回true，那么怎么判断正负0
代码如下
```
（判断-0）
function(num){
return num == 0 && 1 / num < 0 
}
（判断+0）
function(num){
return num == 0 && 1 / num > 0 
}
```
