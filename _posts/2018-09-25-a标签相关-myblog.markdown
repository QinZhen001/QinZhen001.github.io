---
layout:     post
title:      "a标签的rel属性noreferrer"
date:       2018-09-25 17:07:00
author:     "Qz"
header-img: "img/post-bg-2015.jpg"
catalog: true
tags:
    - Html
---

> “Yeah It's on. ”

# 正文

[网页链接](http://www.w3school.com.cn/tags/att_a_rel.asp)



## rel属性



### 浏览器支持

所有浏览器都支持 rel 属性。


虽然在理论上讲，浏览器可以利用 rel 和 rev 属性改变锚内容的外观、或者自动构建文档浏览菜单，其他工具也可以使用这些属性来构建特殊的链接集合、目录和索引，但是只有极少数浏览器才会利用这些属性来改变链接的外观。


>提示：尽管浏览器不会以任何方式使用该属性，不过搜索引擎可以利用该属性获得更多有关链接的信息。


### 定义和用法
`<a>` 标签的 rel 属性用于指定当前文档与被链接文档的关系。


用于` <a>` 标签的可选属性 rel 和 rev 分别表示源文档与目标文档之间正式的关系和方向。

rel 属性指定从源文档到目标文档的关系，而 rev 属性则指定从目标文档到源文档的关系。这两种属性可以在`<a>` 标签中同时使用。

```
<a href="part_12.html" rel="next" rev="prev">
```

### **重要rel="noreferrer"**
[http://ju.outofmemory.cn/entry/172298](http://ju.outofmemory.cn/entry/172298)

在一个页面A中，点击一个链接，浏览器会跳转到页面B。那么如何描述A和B的关系呢？我们把A定义为B的refer/referrer/referer

通俗地说，A是B的来源页面/引荐页面。从技术实现上，你从浏览器起发出的任何请求（不准确，先这么理解吧），例如打开新页面、请求静态资源、ajax、请求后端api等等，都会在请求头部添加


#### 问题出现
最近在做node爬虫时，发现，有一些页面需要跳转到某网站（新开页面），但这个网站链接链过去会报403错误，如下图。但是，从浏览器输入地址，则没有问题。

**如果链接链过去的时候不带referrer信息，则网页能够正常打开。**

**最简易直观的实现方式，如果一个a标签设置了rel=”noreferrer”，那么点击这个链接时不传递referrer信息。（注意，这个html5标准中和referrer是正确的拼法）**

```
<a href="http://baidu.com" target="_blank" rel="noreferrer">跳转</a>
```


>如果担心兼容性问题，可以使用 noreferrer.js 



## href



### href = ""

**a href="javascript:js_method();"**

这是常用的方法，但是这种方法在传递this等参数的时候很容易出问题，而且javascript:协议作为a的href属性的时候不仅会导致不必要的触发window.onbeforeunload事件，在IE里面更会使gif动画图片停止播放。W3C标准不推荐在href里面执行javascript语句

**a href="javascript:void(0);" onclick="js_method()"**

这种方法是很多网站最常用的方法，也是最周全的方法，onclick方法负责执行js函数，而void是一个操作符，void(0)返回undefined，地址不发生跳转。而且这种方法不会像第一种方法一样直接将js方法暴露在浏览器的状态栏。

**a href="javascript:;" onclick="js_method()"**

这种方法跟跟2种类似，区别只是执行了一条空的js代码。



## target

### _blank

浏览器总在一个新打开、未命名的窗口中载入目标文档。

### _self

这个目标的值对所有没有指定目标的 `<a>` 标签是默认目标，它使得目标文档载入并显示在相同的框架或者窗口中作为源文档。这个目标是多余且不必要的，除非和文档标题 `<base>` 标签中的 target 属性一起使用。

### _parent

这个目标使得文档载入父窗口或者包含来超链接引用的框架的框架集。如果这个引用是在窗口或者在顶级框架中，那么它与目标 _self 等效。

### _top

这个目标使得文档载入包含这个超链接的窗口，用 _top 目标将会清除所有被包含的框架并将文档载入整个浏览器窗口。



**提示：
这些 target 的所有 4个值都以下划线开始。任何其他用一个下划线作为开头的窗口或者目标都会被浏览器忽略，因此，不要将下划线作为文档中定义的任何框架 name 或 id 的第一个字符。**



# 补充



## 在新窗口中打开页面的坑

[网页链接](http://imweb.io/topic/584cd0459be501ba17b10aaa)

用a标签的target="_blank"属性，或者window.open(url)在新窗口中打开页面时，会存在潜在的安全问题。为什么呢？这个锅是一个叫opener的全局对象的锅。



### 性能问题

为什么新窗口中的页面会影响父页面的线程呢？chrome不是每个标签页一个单独的进程？然后进程内包含若干线程吗？

确实，chrome有不同的标签页面使用不同进程和线程，但是有个例外，通过a标签的target="_blank"属性，或者window.open(url)在新窗口中打开页面, 会与父窗口共用进程和线程。为什么呢？

还是因为opener。。。。因为opener里有DOM信息。两个进程中同时hold住了DOM信息，在多进程下很难道控制，所以干脆就放在一个进程里了。这个算是chrome的一个小缺陷（firefox也有，ie没有），不过chrome目前正在跟进和优化这里。



### 解决方案

* 如果是a标签要在新窗口中打开，添加noopener属性
* 如果是js中打开新窗口，手动将新窗口的opener置为null

```html
<a target="_blank" href="http://keenwon.com/">点击</a>
```

在新打开的标签页通过window.oponer ，可以获得当前页面的window 。这样的话，http://keenwon.com（被打开的页面）将获得当前页面的部分控制权，即使新打开的页面是跨域的也照样可以（例如location 就不存在跨域问题）。  