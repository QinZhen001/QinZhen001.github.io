---
layout:     post
title:      "ie相关"
date:       2020-05-13 11:12:00
author:     "Qz"
header-img: "img/post-bg-2015.jpg"
catalog: true
tags:
    - Other
---

> “Yeah It's on. ”
>








# 遇到的问题





### iframe中src使用base64在ie10无法显示





```js
var iframe = document.createElement("iframe");
iframe.src = "data:text/html;base64,PCFET0NUWVBFIGh0bWw+DQo8aHRtbCBsYW5nPSJlbiI+DQo8aGVhZD4NCiAgPG1ldGEgY2hhcnNldD0iVVRGLTgiPg0KICA8bWV0YSBuYW1lPSJ2aWV3cG9ydCIgY29udGVudD0id2lkdGg9ZGV2aWNlLXdpZHRoLCBpbml0aWFsLXNjYWxlPTEuMCI+DQogIDxtZXRhIGh0dHAtZXF1aXY9IlgtVUEtQ29tcGF0aWJsZSIgY29udGVudD0iaWU9ZWRnZSI+DQogIDx0aXRsZT7lvZXlhaXmqKHmnb88L3RpdGxlPg0KPC9oZWFkPg0KPGJvZHk+DQogIDxkaXYgY2xhc3M9ImVkaXRQYW5lbCI+DQogICAgMTExDQogIDwvZGl2Pg0KPC9ib2R5Pg0KPC9odG1sPg=="

document.body.appendChild(iframe);
```



这代码在chrome浏览器查看正常，但是在ie中无法查看



网上搜索找到类似的问题



[Saving Base64 encoded PDF with Internet Explorer 10 and below](https://stackoverflow.com/questions/27154606/saving-base64-encoded-pdf-with-internet-explorer-10-and-below)



[Download/display Pdf/Excel from base64 string – byte array]( https://viethoblog.wordpress.com/2016/08/30/loaddisplay-pdf-from-base64-string-bonus-ie-workaround/ )



推断出在ie10和ie11是不支持在iframe标签的src中使用base64

-----



#### 解决方案

* src指向一个url地址，去掉base64加密
* 在ie中使用msSaveOrOpenBlob，供保存和打开文件  



msSaveOrOpenBlob方案



[msSaveOrOpenBlob]( https://developer.mozilla.org/en-US/docs/Web/API/Navigator/msSaveOrOpenBlob )

[window.navigator.msSaveBlob 和window.navigator.msSaveOrOpenBlob]( https://blog.csdn.net/weixin_37704921/article/details/84324923 )





> The **`Navigator.msSaveOrOpenBlob()`** method saves the [`File`](https://developer.mozilla.org/en-US/docs/Web/API/File) or [`Blob`](https://developer.mozilla.org/en-US/docs/Web/API/Blob) to disk. This method behaves in the same way as [`Navigator.msSaveBlob()`](https://developer.mozilla.org/en-US/docs/Web/API/Navigator/msSaveBlob) except that this enables the file open option.



> mssaveoropenblob()方法将文件或Blob保存到磁盘。此方法的行为与Navigator.msSaveBlob()相同，只是它启用了file open选项 





```js
var data =
  "PCFET0NUWVBFIGh0bWw+DQo8aHRtbCBsYW5nPSJlbiI+DQo8aGVhZD4NCiAgPG1ldGEgY2hhcnNldD0iVVRGLTgiPg0KICA8bWV0YSBuYW1lPSJ2aWV3cG9ydCIgY29udGVudD0id2lkdGg9ZGV2aWNlLXdpZHRoLCBpbml0aWFsLXNjYWxlPTEuMCI+DQogIDxtZXRhIGh0dHAtZXF1aXY9IlgtVUEtQ29tcGF0aWJsZSIgY29udGVudD0iaWU9ZWRnZSI+DQogIDx0aXRsZT7lvZXlhaXmqKHmnb88L3RpdGxlPg0KPC9oZWFkPg0KPGJvZHk+DQogIDxkaXYgY2xhc3M9ImVkaXRQYW5lbCI+DQogICAgMTExDQogIDwvZGl2Pg0KPC9ib2R5Pg0KPC9odG1sPg==";
var fileName = "test.html";
if (window.navigator && window.navigator.msSaveOrOpenBlob) {
  // IE workaround
  // atob() 用于解码使用 base-64 编码的字符串。
  var byteCharacters = atob(data);
  var byteNumbers = new Array(byteCharacters.length);
  for (var i = 0; i < byteCharacters.length; i++) {
    byteNumbers[i] = byteCharacters.charCodeAt(i);
  }
  var byteArray = new Uint8Array(byteNumbers);
  var blob = new Blob([byteArray], { type: "text/html" });
  // 提供保存和打开按钮
  let res = window.navigator.msSaveOrOpenBlob(blob, fileName);
  console.log("res", res);
} else {
  // much easier if not IE
  // 直接open
  window.open("data:text/html;base64," + data, "", "height=600,width=800");
  // 或者 给iframe设置base64的src
  // ....
}

```





## 补充



### ie版本切换



ie其实可以在开发者工具 仿真 =》 文档模式 选择不同版本的ie，并不需要借助额外的工具如： **IETester** 



![](https://s1.ax1x.com/2020/05/13/Yad95n.png)



### btoa和atob

[btoa和atob来编码解码Base64 ]( https://my.oschina.net/itblog/blog/1613977 )



```js
// Define the string
var string = 'Hello World!';

// Encode the String
var encodedString = btoa(string);
console.log(encodedString); // Outputs: "SGVsbG8gV29ybGQh"

// Decode the String
var decodedString = atob(encodedString);
console.log(decodedString); // Outputs: "Hello World!"
```

可以看到，字符串“Hello World!”已被Base64编码和解码。但是，atob和btoa不能编码Unicode字符：

```js
var string = "Hello, 中国！";
window.btoa(string);

// 报错
Failed to execute 'btoa' on 'Window': The string to be encoded contains characters outside of the Latin1 range.
```



那如何用这种方式支持汉字呢？这里我们可以先将带有非Latin1字符的串先用encodeURIComponent编码：

```js
var string = "Hello, 中国！";
//"SGVsbG8lMkMlMjAlRTQlQjglQUQlRTUlOUIlQkQlRUYlQkMlODE="
var encodedString = btoa(encodeURIComponent(string));
var decodedString = decodeURIComponent(atob(encodedString));
console.log(decodedString); //"Hello, 中国！"
```





注意，编码的过程是先encodeURI，再编码，那么解码的过程应该是先解码，再decodeURI。另外，在使用atob和btoa这两个函数时需要注意的是，**IE9是不支持的**





