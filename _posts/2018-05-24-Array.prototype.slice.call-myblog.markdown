---
layout:     post
title:      "Array.prototype.slice.call()"
date:       2018-05-24 23:04:00
author:     "Qz"
header-img: "img/post-bg-2015.jpg"
catalog: true
tags:
    - JavaScript
---

> “Yeah It's on. ”


## 正文
[网页链接](https://blog.csdn.net/hellokingqwe/article/details/52585169)


Array.prototype.slice.call(arguments)可以将 类数组 转化为真正的数组


### 什么是类数组
有length属性，属性值为数字；其他属性值为数字‘0’，‘1’，等

```javascript
var myobject ={ // array-like collection  
        length: 4,  
        '0': 'zero',  
        '1': 'one',  
        '2': 'two',  
        '3': 'three'  
    }  
```    



### 源码分析

到了该去看看Array.prototype.slice源码的时候了！

```javascript
    查看 V8 引擎 array.js 的源码，可以将 slice 的内部实现简化为：  
      
    function slice(start, end) {   
    var len = ToUint32(this.length), result = [];   
    for(var i = start; i < end; i++) {   
        result.push(this[i]);   
    }   
        return result;   
    }       
```   
    
    
    
可以看出，slice 并不需要 this 为 array 类型，只需要有 length 属性即可。并且 length 属性可以不为 number 类型，当不能转换为数值时，ToUnit32(this.length) 返回 0. 




### 多种调用格式
* [].slice.call(arguments)
* Array.prototype.slice.call(arguments)   **//最高效**
* new Array().prototype.slice.call(arguments)












