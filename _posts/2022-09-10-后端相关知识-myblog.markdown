---
layout:     post
title:      "后端相关知识"
date:       2022-09-10 19:31:00
author:     "Qz"
header-img: "img/post-bg-2015.jpg"
catalog: true
tags:
    - 后端
---

> “Yeah It's on. ”





# 分布式



## 分布式架构



#### 主从架构

主从架构（Master-slave architecture）是一种分布式系统架构模式，其中一个节点作为主节点（Master）负责协调和管理其他节点（从节点/Slave），从而实现任务的分配和处理。主节点负责接收和处理客户端请求，然后将任务分发给从节点处理，从节点负责执行主节点分配给它的任务。主节点负责监控从节点的状态，并在从节点故障时重新分配任务到其他可用的从节点。主从架构可以提高系统的可伸缩性、可靠性和性能。 在主从架构中，主节点负责处理复杂的任务、存储系统的元数据和协调节点之间的通信。从节点负责执行实际的任务，如计算、存储数据等。主从架构通常用于数据库、分布式存储系统和分布式计算集群等场景，以提高系统的性能和容错能力。



## base理论



## cap 理论





## 分布式事务



tcc





# 消息队列



## RocketMQ





### half 消息



# docker

docker run -it alpine sh

例子：

docker run -d -p 80:80 nginx    

-d   后台一直运行 daemon

 -p 映射到物理机器的80端口

---

查看进程

docker ps 

---

杀掉进程

docker kill 973322dc1872

973322dc1872 => CONTAINER ID



## Daemon

Docker Daemon是**Docker架构中运行在后台的守护进程**，大致可以分为Docker Server、Engine和Job三部分。 Docker Daemon可以认为是通过Docker Server模块接受Docker Client的请求，并在Engine中处理请求，然后根据请求类型，创建出指定的Job并运行





# shell 编程

[https://wangdoc.com/bash/intro](https://wangdoc.com/bash/intro)





# elastic

elastic连接elasticsearch时自动转换连接地址

elastic.SetSniff(false)



# elasticsearch



```tsx
 elastic.NewClient(
    // Must turn off sniff in docker
    // 不会自动转换地址
    elastic.SetSniff(false))
```



## Sniffing

[https://juejin.cn/post/6959746724995072031](https://juejin.cn/post/6959746724995072031)

