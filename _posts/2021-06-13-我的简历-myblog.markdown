---
layout:     post
title:      "我的简历"
date:       2021-06-13 17:32:00
author:     "Qz"
header-img: "img/post-bg-2015.jpg"
catalog: true
tags:
    - Other
---

> “Yeah It's on. ”
>





# 基础信息

名字，性别，电话，邮箱，求职岗位，教育经历（略）



# 个人技能

- 掌握 html， css， js，ts 相关知识，掌握常⻅的⻚面布局方式
- 熟悉 node.js 在前端中的应用
- 了解 web rtc，了解音视频相关知识 
- 熟悉微信小程序相关开发
- 熟悉 electorn 相关开发
- 熟悉 vue 和 react 相关，了解其关键实现原理
- 熟悉 webpack 和 vite，对前端组件化，工程化，自动化有一定的理解
- 熟悉 babel，写过 babel 插件和 ast 相关的工具
- 掌握基本的算法和数据结构，了解设计模式



# **工作经历**

2021.4 - 至今 声网 agora 商业服务与交付中心(CSDC)    web 前端开发高级工程师

* 负责教育场景 aPaas (灵动课堂) / 会议场景 aPaas 相关开发，参与架构设计，协议制定，api 文档编写等
* 参与灵动课堂 1.x 升级 2.0，进行代码结构重构，进行工作流改造
* 负责 m3u8 前端播放器封装
* 负责前端音视频场景最佳实践的搭建
* 负责前端音视频小程序sdk的迭代更新
* 担任前端面试官

2020.3 - 2021.3 晓教育集团 星火在线一对一事业部    web 前端开发工程师

- 参与 op 运营管理系统迭代开发以及工作流优化
- 配合设计师基于 element 组件库进行二次封装， 满足设计规范
- 负责家长公众号以及移动端 h5 相关开发
- 协助前端组长制定组内代码规范

2018.9 - 2020.2 小黑屋科技有限公司 web 前端开发工程师

* 负责开发公司内部小程序框架
* 负责开发矩阵小程序框架迁移工具，以及相关前端工作流开发
* 负责开发 node 数据爬虫
* 指导实习生完成日常需求



# 项目经历

2021.4 - 至今    教育场景 aPaas (灵动课堂) / 会议场景 aPaas

 ( react + mobx + ts + electorn + agora rtc/rtm sdk + IndexedDB + lerna)

 项目概述: aPaaS 以解决共性问题的核心模型降低 SaaS 每次迭代的成本和效率问题，可以支持客户快速集成到自主品牌的产品方案里，又能灵活定制，打通客户不同的业务流。同时又能保证客户业务数据自主掌控，构建私域流量。

 项目成果:  lerna 实现 monorepo 管理，分层架构设计(rte => core/ui-kit => sdk)，基于 mobx 最佳实践重构 stores(domain store 和 ui store)从网状结构变为树状结构，设计 onInstall 和 onDestroy 钩子，用于初始化和销毁事件监听，采用工厂模式针对不同场景创建不同 rootStore。errorEnter 统一错误处理，Logger 采取装饰器模式，分级分环境设计，结合 web worker 自动存入 IndexedDB。支持 ExtApp 和 plugin，支持使用者开发自己的 plugin。底层 rte 采用适配器模式同时支持 web 和 pc，封装 synchronizer 管理 snapshot 和 queueTasks 等，基于 async-await-retry 封装重试机制。

 工作流优化: webpack4 升级到 5，移除 cra 脚手架相关(create react app)，完全自己定制化，基于 lerna 进行子包公共依赖提升，配置 sideEffects，制定不同的静态资源压缩策略，重新设计 ts config，scripts 命令优化，提取 webpack.base.config。优化 babel 配置，按需引入 polyfill。



2021.4 - 至今    音视频小程序sdk

项目概述:  利用微信小程序 [live-player](https://developers.weixin.qq.com/miniprogram/dev/component/live-player.html) 和 [live-pusher](https://developers.weixin.qq.com/miniprogram/dev/component/live-pusher.html) 组件实现音视频通话

项目成果: 分层架构设计(wx socket => worker => client)，解耦重构日志模块 (日志规范化，切片上传，支持客户自己收集保存日志或通过sdk api上传日志)，支持小程序原生npm，wx socket重试机制以及错误捕获，对外api同时支持callback和promise返回，协助文档组更新迭代官网api文档，维护sdk最佳实践demo小程序迭代更新。

 工作流优化: 依赖整理，支持开发环境和生产环境打包，体积优化190kb => 150+kb



2020.3 - 2021.3 op 运营管理系统

 (vue + element ui + webpack)

 项目概述: 一个 b 端内部运营管理系统，主要使用角色有老师，学规，学管，销售，教培，数据分析等。

 项目成果: 负责学规工作台， 学管工作台， 老师海报编辑， 课堂报告等模块开发， 重构批量导入资源模块。参与封装通用业务组件， 通用 select 组件 (支持初始化回显， 高级筛选)通用 table 组件(自带索引， 集成分⻚器组件， 文字超出隐藏， 鼠标悬浮显示 tooltip 等)通用上传组件 (支持扫码上传， 剪贴板复制上传等)。参与权限控制，自定义上报，自定义命令等封装，参与开发系统组织架构调整。

工程化优化: 分析 webpack 编译速度以及打包体积， 将@antv 相关库移出 vendors， 配置 cache， 移除 moment 其 他语言包，整理项目依赖， 最终编译时间从 1 分 30s 降到 1 分 10s， 体积减少近 15%。



2020.3 - 2021.3  家长公众号以及移动端 h5

(vue + vant ui + webpack)

项目成果: 负责课程日历，课程表，题目面板，题目展示，入学测报告， 课堂报告等⻚面， 精确还原设计稿实现复杂交 互， 对复杂组件进行懒加载，基于 vant 组件库二次封装，同时适配部分 h5⻚面在 pc 端的展示效果 。基于 webViewjsBridge 封装与 app 通信的相关函数。



2018.9 - 2020.2  公司内部微信小程序框架

项目概述: 由于原生微信小程序更新速度过快， 市面主流框架存在一些 bug， 难以胜任公司业务快速迭代，遂决定从零 开发公司自己的框架 ，集合公司内部沉淀下来的一些优化方案。

项目成果: 实现网络请求封装 (请求模式， 请求配置， 拦截器， 请求依赖， 请求加密， 请求重试机制等)。实现 store 对全局数据状态进行管理， 内部实现 observer 监听数据的变更自动 setData 更新⻚面。针对大的 Object 进行 diff， 提高 setData 效率。采用 Ioc 模式实现插件化机制， 可使用内部插件， 可自己编写插件。实现全局错误监控上报机制。对原生 wx api 进行 promisefy 化， 实现全局通信机制， 解决长列表数据加载渲染过慢问题， 解决小程序⻚面栈 最多十层的问题等。

工作流搭建: 使用 gulp 结合 npm script 搭建工作流， 实现文件监听， 分环境打包， 预编译， 支持 less， 静态资源压缩， 配置 eslint 规则，自动安装依赖，正式环境将小图标集合自动转为精灵图， 同时将其上传至阿里云。结 合内部 cli 工具，实现矩阵小程序系列切换，集成微信命令行工具，可使用命令上传代码包。利用 husky 钩子检查代码，保证提交 到 git 代码的一致性。

使用框架后，常规业务迭代从原来一星期 4 人 4 天降至 3 人 2 天，保证百万 DAU 级别的小程序稳定运行。



2018.9 - 2020.2  数据爬虫

(koa + node-schedule + pm2)

项目概述:为了方便运营同学查找素材和编辑素材，提高运营同学工作效率。

项目成果: fiddler 抓包分析接口，自动化复杂异步流程(抓取数据，存储服务器，生成 json 信息文件，上传腾讯云 cos 桶，添加水印，导入后端数据库，设置定时任务)。同时负责后台系统中素材编辑的相关⻚面开发，使爬取下来的素 材可以展示和二次编辑。



# 个人评价

积极乐观，保持良好的代码⻛格和编程习惯，对前端技术保持热情，希望加入技术氛围比较好的团队。



# **个人作品**

* 我的博客: https://qinzhen001.github.io/ 
* 算法系列: https://github.com/QinZhen001/leetcode 
* 手写源码: https://github.com/QinZhen001/front-end-demo
