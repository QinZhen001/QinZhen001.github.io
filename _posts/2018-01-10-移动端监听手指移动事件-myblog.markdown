---
layout:     post
title:      "移动端监听手指移动事件"
date:       2018-01-10 23:36:00
author:     "Qz"
header-img: "img/post-bg-2015.jpg"
catalog: true
tags:
    - JavaScript
---

> “Yeah It's on. ”

http://blog.csdn.net/kk_yanwu/article/details/73251310




## 正文

* touchstart：触摸开始的时候触发
* touchmove：手指在屏幕上滑动的时候触发
* touchend：触摸结束的时候触发

会传入event参数

**event里面有**
1. touches：表示当前跟踪的触摸操作的touch对象的数组。
2. targetTouches：特定于事件目标的Touch对象的数组。
3. changeTouches：表示自上次触摸以来发生了什么改变的Touch对象的数组。


每个touches包含的属性
1. clientX：触摸目标在视口中的x坐标。
2. clientY：触摸目标在视口中的y坐标。
3. identifier：标识触摸的唯一ID。
4. pageX：触摸目标在页面中的x坐标。
5. pageY：触摸目标在页面中的y坐标。
6. screenX：触摸目标在屏幕中的x坐标。
7. screenY：触摸目标在屏幕中的y坐标。
8. target：触目的DOM节点目标。 


### 注意
**在touchend里的event获取不到touches[0]只能获取changeTouches[0]**

在Vue中
```
<template>
  <div class="singer2"
       @touchstart.prevent="onTouchStart"
       @touchmove.prevent="onTouchMove"
       @touchend.prevent="onTouchEnd">
  </div>
</template>

<script type="text/ecmascript-6">
  export default{
    created(){
      this.touch = {}
    },
    methods: {
      onTouchStart(e){
        this.touch.initiated = true
        // 用来判断是否为一次移动
        this.touch.moved = false
        const touch = e.touches[0]
        this.touch.startX = touch.pageX
        this.touch.startY = touch.pageY
      },
      onTouchMove(e){
        if (!this.touch.initiated) {
          return
        }
        const touch = e.touches[0]
        const deltaX = touch.pageX - this.touch.startX
        const deltaY = touch.pageY - this.touch.startY
        console.log(`在x轴移动: ${deltaX}`)
        console.log(`在y轴移动: ${deltaY}`)
//        if (Math.abs(deltaY) > Math.abs(deltaX)) {
//          // 手指在Y轴的趋势比在X轴明显
//          return
//        }
        if (!this.touch.moved) {
          this.touch.moved = true
        }
      },
      onTouchEnd(){
        if (!this.touch.moved) {
          return
        }
        // ...
        // 剩下操作
        this.touch.initiated = false
      }
    }
  }
</script>
```




